@model CBA.Core.ViewModels.NewCustomerAccountViewModel
@{
    ViewBag.Title = "Customer Account Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Save", "CustomersAccount"))
{
    if (@Model.Id != 0 && Model.IsOpen)
     {
         <div class="text-center  mb-4">
             <h1>Customer Account is Open</h1>
         </div>
     }
    if (@Model.Id != 0 && !Model.IsOpen)
    {
        <div class="text-center  mb-4">
            <h1>Customer Account is Closed</h1>
        </div>
    }

    <div class=" form-signin">
        @if (@Model.Id == 0)
        {
            <div class="text-center  mb-4">
                <h1>Open Account</h1>
            </div>
        }
       
        else
        {
            <div class="text-center  mb-4">
                <h1>Edit Account</h1>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(m => m.Customer.FullName)
            @Html.DisplayTextFor(m => m.Customer.FullName)
            @Html.ValidationMessageFor(m => m.Customer)
        </div>

        <div class="form-group">
            <div class="form-group">
                @Html.LabelFor(m => m.AccountName)
                @Html.TextBoxFor(m => m.AccountName, new {@class = "form-control", required = "required"})
                @Html.ValidationMessageFor(m => m.AccountName)
            </div>
            
            @Html.LabelFor(m => m.Branches, new {})
            @Html.DropDownListFor(m => m.BranchId, new SelectList(Model.Branches, "id", "Name"), "Select Branch ", new {@class = "form-control", required = "required"})
            @Html.ValidationMessageFor(m => m.BranchId)
            
        
            @if(@Model.Id == 0){
            <div class="form-group">
                @Html.LabelFor(m => m.AccountType)
                @Html.EnumDropDownListFor(m => m.AccountType, "Select Account Type", new {@class = "form-control", required = "required"})
                @Html.ValidationMessage("selectAccountType", new {@class ="user-validation-error"})
                
            </div>
            }
            @if(@Model.Id != 0){
                <div class="form-group">
                    @Html.LabelFor(m => m.AccountType)
                    @Html.EnumDropDownListFor(m => m.AccountType, "Select Account Type", new {@class = "form-control", disabled= "true"})


                </div>
            }
            <div class="form-group">
                @Html.LabelFor(m => m.Lien)
                @Html.TextBoxFor(m => m.Lien, new {@class = "form-control", required = "required"})
                @Html.ValidationMessageFor(m => m.Lien)
            </div>

        </div>
        @*@Html.HiddenFor(m=>m.Id)*@
        <input type="hidden" name="id" value="@Model.Id"/>
        
            <input type="hidden" name="userId" value="@Model.Customer.Id"/>
            <input type="hidden" name="customerId" value="@Model.Customer.CustomerId"/>
        

        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-primary">Save</button>
      

    </div>
}


